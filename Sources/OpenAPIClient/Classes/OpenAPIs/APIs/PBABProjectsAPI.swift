//
// PBABProjectsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PBABProjectsAPI {

    /**
     List machine projects
     
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listProjects(page: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ListProjects200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listProjectsWithRequestBuilder(page: page).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List machine projects
     - GET /project
     - API endpoint that allows a machine to retrieve the PBAB projects that it can mint.  This REST endpoint can be used to retrieve the projects and project metadata of existing Powered by Art Blocks contracts. This endpoint only returns the projects for which the current user has permission to mint.
     - BASIC:
       - type: http
       - name: BasicAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - parameter page: (query) A page number within the paginated result set. (optional)
     - returns: RequestBuilder<ListProjects200Response> 
     */
    open class func listProjectsWithRequestBuilder(page: Int? = nil) -> RequestBuilder<ListProjects200Response> {
        let localVariablePath = "/project"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": page?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListProjects200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Check if mintable
     
     - parameter id: (path) A unique primary key string identifying this project. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func mintableProject(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: MintableProject200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return mintableProjectWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Check if mintable
     - GET /project/{id}/mintable
     - Look up if a project is currently mintable. This endpoint:  1. Ensures the currently authenticated machine user is within their set quota for the project minting limit if a minting limit was set 2. Checks that the project is within its maximum total invocations specified on as an attribute of the smart contract 3. Verifies the artist wallet is linked with a sufficient balance to mint a new token  In order to avoid preventable user-facing errors that will cause minting to fail, clients should check the state of projects before requesting a new mint. 
     - BASIC:
       - type: http
       - name: BasicAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - parameter id: (path) A unique primary key string identifying this project. 
     - returns: RequestBuilder<MintableProject200Response> 
     */
    open class func mintableProjectWithRequestBuilder(id: String) -> RequestBuilder<MintableProject200Response> {
        var localVariablePath = "/project/{id}/mintable"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<MintableProject200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Retrieve project
     
     - parameter id: (path) A unique primary key string identifying this project. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func retrieveProject(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Project?, _ error: Error?) -> Void)) -> RequestTask {
        return retrieveProjectWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve project
     - GET /project/{id}
     - API endpoint that allows Project to be created, retrieved, or deleted.
     - BASIC:
       - type: http
       - name: BasicAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - parameter id: (path) A unique primary key string identifying this project. 
     - returns: RequestBuilder<Project> 
     */
    open class func retrieveProjectWithRequestBuilder(id: String) -> RequestBuilder<Project> {
        var localVariablePath = "/project/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Project>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
