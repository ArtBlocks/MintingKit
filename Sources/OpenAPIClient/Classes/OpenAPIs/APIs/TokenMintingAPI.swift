//
// TokenMintingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class TokenMintingAPI {

    /**
     Mint new token
     
     - parameter createMintingRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createMinting(createMintingRequest: CreateMintingRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Minting?, _ error: Error?) -> Void)) -> RequestTask {
        return createMintingWithRequestBuilder(createMintingRequest: createMintingRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Mint new token
     - POST /minting
     - This endpoint initiates a new request to mint an NFT using a Powered by Art Blocks project.
     - BASIC:
       - type: http
       - name: BasicAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - parameter createMintingRequest: (body)  (optional)
     - returns: RequestBuilder<Minting> 
     */
    open class func createMintingWithRequestBuilder(createMintingRequest: CreateMintingRequest? = nil) -> RequestBuilder<Minting> {
        let localVariablePath = "/minting"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createMintingRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Minting>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     List token receipts
     
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listMintings(page: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ListMintings200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return listMintingsWithRequestBuilder(page: page).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List token receipts
     - GET /minting
     - List all of the previous requests to mint a token initiated by this machine.
     - BASIC:
       - type: http
       - name: BasicAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - parameter page: (query) A page number within the paginated result set. (optional)
     - returns: RequestBuilder<ListMintings200Response> 
     */
    open class func listMintingsWithRequestBuilder(page: Int? = nil) -> RequestBuilder<ListMintings200Response> {
        let localVariablePath = "/minting"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": page?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListMintings200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Retrieve token receipt
     
     - parameter id: (path) A primary key string identifying this minting. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func retrieveMinting(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Minting?, _ error: Error?) -> Void)) -> RequestTask {
        return retrieveMintingWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve token receipt
     - GET /minting/{id}
     - Retrieve the details of a specific minted token.
     - BASIC:
       - type: http
       - name: BasicAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - parameter id: (path) A primary key string identifying this minting. 
     - returns: RequestBuilder<Minting> 
     */
    open class func retrieveMintingWithRequestBuilder(id: String) -> RequestBuilder<Minting> {
        var localVariablePath = "/minting/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Minting>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
